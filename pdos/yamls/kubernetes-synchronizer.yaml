---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kube-synchronizer
  namespace: kube-system
data:
  ConfigMap: ConfigMap
  Namespace: Namespace
  Node: Node
  PersistentVolumeClaim: PersistentVolumeClaim
  PersistentVolume: PersistentVolume
  Pod: Pod
  ReplicationController: ReplicationController
  Secret: Secret
  ServiceAccount: ServiceAccount
  CustomResourceDefinition: CustomResourceDefinition
  DaemonSet: DaemonSet
  Deployment: Deployment
  ReplicaSet: ReplicaSet
  StatefulSet: StatefulSet
  CronJob: CronJob
  Job: Job
  NetworkPolicy: NetworkPolicy
  Ingress: Ingress
  ClusterRoleBinding: ClusterRoleBinding
  ClusterRole: ClusterRole
  RoleBinding: RoleBinding
  Role: Role
  StorageClass: StorageClass
  Service: Service
  RBACRole: RBACRole
  RBACUser: RBACUser
  Frontend: Frontend
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata: 
  name: "kube-synchronizer"
  namespace: "kube-system"
  labels: 
    name: "kube-synchronizer"
spec: 
  replicas: 1
  selector: 
    matchLabels:
      name: "kube-synchronizer"
  template: 
    metadata: 
      labels: 
        name: "kube-synchronizer"
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
      - name: "kube-synchronizer"
        image: "registry.cn-beijing.aliyuncs.com/kubesys/kubernetes-synchronizer:v1.3.0-amd64"
        imagePullPolicy: "IfNotPresent"
        command: 
        - "java"
        - "-jar"
        - "kubernetes-synchronizer.jar"
        volumeMounts: 
        - name: "kubetoken"
          mountPath: "/etc/kubernetes"
      volumes: 
      - name: "kubetoken"
        hostPath:
          path: "/etc/kubernetes"
