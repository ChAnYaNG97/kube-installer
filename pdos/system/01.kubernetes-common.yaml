---
apiVersion: batch/v1
kind: Job
metadata:
  name: kube-init
  namespace: kube-system
  labels:
    app: kube-init
spec:
  template:
    metadata:
      labels:
        app: kube-init
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
      - image: registry.cn-beijing.aliyuncs.com/kubesys/kubernetes-init:0.1-amd64
        command:
        - bash
        - 'init.sh'
        imagePullPolicy: IfNotPresent
        name: kube-init
        volumeMounts:
        - name: "kubecmd"
          mountPath: "/usr/bin/kubectl"
        - name: "kubetoken"
          mountPath: "/root/.kube/"
        - name: "jsons"
          mountPath: "/var/lib/pdos"
      restartPolicy: Never
      volumes:
      - name: "kubecmd"
        hostPath:
          path: "/usr/bin/kubectl"
      - name: "kubetoken"
        hostPath:
          path: "/root/.kube/"
      - name: "jsons"
        hostPath:
          path: "/var/lib/pdos"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kube-database
  namespace: kube-system
data:
  DRIVER: com.mysql.cj.jdbc.Driver
  JDBC: jdbc:mysql://kube-database.kube-system:3306
  DATABASE: kube
  USER: root
  PASSWORD: onceas
--- 
apiVersion: "apps/v1"
kind: "Deployment"
metadata: 
  name: "kube-database"
  namespace: "kube-system"
  labels: 
    name: "kube-database"
spec: 
  replicas: 1
  selector: 
    matchLabels:
      name: "kube-database"
  template: 
    metadata: 
      labels: 
        name: "kube-database"
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
      - name: "mariadb"
        image: "mariadb:10.5.3"
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 3306
        env:
        - name: "MYSQL_ROOT_PASSWORD"
          value: "onceas"
        volumeMounts:
        - name: "mysqldata"
          mountPath: "/var/lib/mysql"
      - name: "adminer"
        image: "adminer:4.7.7-standalone"
        imagePullPolicy: "IfNotPresent"
        ports: 
        - containerPort: 8080
      volumes: 
      - name: "mysqldata"
        hostPath:
          path: "/var/lib/mysql"
---
apiVersion: v1
kind: Service
metadata:
  name: kube-database
  namespace: kube-system
  labels: 
    name: kube-database
spec:
  type: NodePort
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
    name: mysql-port
    nodePort: 30306
  - port: 8080
    protocol: TCP
    targetPort: 8080
    name: adminer-port
    nodePort: 30307
  selector:
    name: kube-database
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kube-rabbitmq
  namespace: kube-system
data:
  HOST: kube-rabbitmq.kube-system
  USER: root
  PASSWORD: onceas
  PORT: "5672"
  QUEUE: kube-events
--- 
apiVersion: "apps/v1"
kind: "Deployment"
metadata: 
  name: "kube-rabbitmq"
  namespace: "kube-system"
  labels: 
    name: "kube-rabbitmq"
spec: 
  replicas: 1
  selector: 
    matchLabels:
      name: "kube-rabbitmq"
  template: 
    metadata: 
      labels: 
        name: "kube-rabbitmq"
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
      - name: "rabbitmq"
        image: "rabbitmq:3.8.5-management"
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 15672  
        - containerPort: 5672  
        env:
        - name: "RABBITMQ_DEFAULT_USER"
          value: "root"
        - name: "RABBITMQ_DEFAULT_PASS"
          value: "onceas" 
        volumeMounts:
        - name: "rabbit-persistent-storage"
          mountPath: "/var/lib/rabbitmq"
      volumes: 
      - name: "rabbit-persistent-storage"
        hostPath:
          path: "/var/lib/rabbitmq"
---
apiVersion: v1
kind: Service
metadata:
  name: kube-rabbitmq
  namespace: kube-system
  labels: 
    name: kube-rabbitmq
spec:
  type: NodePort
  ports:
  - name: rabbitmq-management-port
    nodePort: 30305  
    port: 15672  
    protocol: TCP  
    targetPort: 15672  
  - name: rabbitmq-port 
    nodePort: 30304   
    port: 5672   
    protocol: TCP   
    targetPort: 5672
  selector:
    name: kube-rabbitmq
